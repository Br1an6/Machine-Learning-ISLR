lm.fit
summary (lm.fit)
names(lm.fit)
View(Boston)
coef(lm.fit)
confint(lm.fit)
predict (lm.fit ,data.frame(lstat=c(5 ,10 ,15) ),
interval =" confidence ")
predict (lm.fit ,data.frame(lstat=c(5 ,10 ,15) ), interval =" confidence ")
predict (lm.fit ,data.frame(lstat=c(5 ,10 ,15) ), interval ="confidence")
predict (lm.fit ,data.frame(lstat=c(5 ,10 ,15) ), interval ="prediction")
plot(lstat ,medv)
abline (lm.fit)
abline (lm.fit ,lwd =3)
abline (lm.fit ,lwd =3, col ="red ")
plot(lstat ,medv ,col ="red ")
plot(lstat ,medv ,pch =20)
plot(lstat ,medv ,pch ="+")
plot (1:20 ,1:20, pch =1:20)
par(mfrow =c(2,2))
plot(lm.fit)
plot(predict (lm.fit), residuals (lm.fit))
plot(predict (lm.fit), rstudent (lm.fit))
plot(hatvalues (lm.fit ))
which.max (hatvalues (lm.fit))
mes(Carseats )
names(Carseats)
library (ISLR)
library(ISLR)
library (ISLR)
library(ISLR)
fix(Boston)
fix(Carseats)
fix(Carseats)
library(ISLR)
install.packages("ISLR")
library(ISLR)
fix(Carseats)
names(Carseats )
names(Carseats)
fix(Carseats)
LoadLibraries()
LoadLibraries=function (){
+ library (ISLR)
+ library (MASS)
+ print (" The libraries have been loaded .")
+ }
LoadLibraries=function (){
+ library (ISLR)
}
LoadLibraries=function (){
library (ISLR)
library (MASS)
print (" The libraries have been loaded
}
"}"
LoadLibraries=function (){
library (ISLR)
library (MASS)
print (" The libraries have been loaded.")
}
detach("package:MASS", unload=TRUE)
detach("package:ISLR", unload=TRUE)
LoadLibraries
LoadLibraries()
LoadLibraries=function(){}
LoadLibraries=function(){library(ISLR)
+ library(MASS)}
LoadLibraries=function(){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data ")
Auto=read.table ("Auto.data")
fix(Auto)
names(Auto)
fix(Auto)
lm.fit =lm(medv∼lstat ,data=Boston )
Auto=read.table ("Auto.data")
lm.fit =lm(mpg∼horsepower ,data=Auto)
lm.fit =lm(mpg~horsepower ,data=Auto)
fix(Boston)
fix(Auto)
lm.fit =lm(v1~v4 ,data=Auto)
lm.fit =lm(V1~V4 ,data=Auto)
summary(lm.fit)
LoadLibraries = function (){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data")
lm.fit =lm(V1~V4 ,data=Auto) # v1: mpg v4: horsepower
summary(lm.fit)
q()
nction (){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data")
lm.fit =lm(V1~V4 ,data=Auto) # v1: mpg v4: horsepower
summary(lm.fit)
LoadLibraries = function (){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data")
lm.fit =lm(V1~V4 ,data=Auto) # v1: mpg v4: horsepower
summary(lm.fit)
fit(Auto)
fix(Auto)
LoadLibraries = function (){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data", header =T,na.strings ="?")
lm.fit =lm(V1~V4 ,data=Auto) # v1: mpg v4: horsepower
summary(lm.fit)
Auto=read.table ("Auto.data", header =T,na.strings ="?")
fit(Auto)
fix(Auto)
LoadLibraries = function (){
library (ISLR)
library (MASS)
print ("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table ("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
summary(lm.fit)
plot(mpg ,horsepower)
names(lm.fit )
names(lm.fit)
plot(lstat ,medv)
plot(mpg ,horsepwer)
confint (lm.fit)
predict (lm.fit ,data.frame(mpg=c(5 ,10 ,15) ),interval =" confidence ")
fix(Auto)
lm.fit =lm(mpg~horsepower ,data=Auto)
summary(lm.fit)
coef(lm.fit)
confint (lm.fit)
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ), interval =" confidence ")
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ), interval ="prediction")
plot(mpg ,horsepwer)
attach (Auto)
plot(mpg ,horsepwer)
plot(mpg ,horsepower)
confint (lm.fit)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm.fit)
# start plotting
plot(mpg, horsepower)
abline(lm.fit)
abline (lm.fit ,lwd =3)
abline (lm.fit ,lwd =3, col ="red ")
abline (lm.fit ,lwd =3, col ="red")
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ),
interval =" prediction ")
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ), interval ="prediction")
abline (lm.fit ,lwd =3, col ="red")
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ), interval ="confidence")
predict (lm.fit ,data.frame(horsepower=c(5 ,10 ,15) ), interval ="prediction")
plot(mpg, horsepower)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red ")
abline (lm.fit ,lwd =10, col ="red ")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm.fit)
# start plotting
plot(mpg, horsepower)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
fix(Auto)
lm.fit
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm.fit)
# start plotting
plot(mpg, horsepower)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
#print("Confidence Intervals:")
#confint(lm.fit)
# start plotting
plot(mpg, horsepower)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
names(Auto)
Autop["mage"]
Auto[mag]
Auto[mpg]
Auto["mpg"]
lm.fit =lm(mpg~horsepower ,data=Auto)
summary(lm.fit)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
coef(lm.fit)
confint(lm.fit)
plot(mpg, horsepower)
attach(Auto)
plot(mpg, horsepower)
plot(mpg, horsepower)
lm.fit =lm(mpg~horsepower)
abline (lm.fit ,lwd =3, col ="red")
abline (lm.fit ,lwd =3, col ="red")
plot(mpg, horsepower)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm.fit)
# start plotting
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
names(Auto)
lm.fit =lm(mpg~cylinders + displacement + horsepower + weight + acceleration + year + origin)
summary(lm.fit)
lm.fit =lm(mpg~.-name,data=Auto) # v1: mpg v4: horsepower
lm.fit =lm(mpg~.-name)
summary(lm.fit)
plot(lm.fit)
data(Auto)
pairs(Auto)
names(Auto)
cor(Auto[,-name])
cor(Auto[,-9])
cor(Auto[,1:8])
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
Auto=read.table("Auto.data", header =T,na.strings ="?")
pairs(Auto) # scatterplot matrix
cor(Auto[,1:8]) # correlations between the variables without names
lm.fit =lm(mpg~.-name,data=Auto)
attach(Auto) # for plot
lm.fit =lm(mpg~.-name)
summary(lm.fit)
# start plotting
plot(lm.fit)
plot(log(Auto$horsepower), Auto$mpg, pch = 19, col ="blue")
plot(sqrt(Auto$horsepower), Auto$mpg, pch = 19, col ="blue")
plot((Auto$horsepower)^2, Auto$mpg, pch = 19, col ="blue")
plot((Auto$horsepower)^2, Auto$mpg)
fix(Carseats)
View(Auto)
detach("package:ISLR", unload=TRUE)
names(Auto)
library(ISLR)
names(Auto)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
#Auto=read.table("Auto.data", header =T,na.strings ="?")
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm.fit)
# start plotting
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
#Auto=read.table("Auto.data", header =T,na.strings ="?")
pairs(Auto) # scatterplot matrix
cor(Auto[,1:8]) # correlations between the variables without names
lm.fit =lm(mpg~.-name,data=Auto)
attach(Auto) # for plot
lm.fit =lm(mpg~.-name)
summary(lm.fit)
# start plotting
plot(lm.fit)
plot(log(Auto$horsepower), Auto$mpg)
plot(sqrt(Auto$horsepower), Auto$mpg)
plot((Auto$horsepower)^2, Auto$mpg)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(Sales~Price + Urban + US, data = Carseats))
attach(Carseats) # for plot
lm.fit =lm(Sales~Price + Urban + US)
summary(lm)
# start plotting
plot(lm.fit)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(Sales~Price + Urban + US, data = Carseats)
attach(Carseats) # for plot
lm.fit =lm(Sales~Price + Urban + US)
summary(lm)
#uses the predictors for which there is evidence of association with the outcome
lm2 = lm(Sales~Price + US, data = Carseats)
summary(lm2)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm2)
# start plotting
plot(lm.fit)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(Sales~Price + Urban + US, data = Carseats)
attach(Carseats) # for plot
lm.fit =lm(Sales~Price + Urban + US)
summary(lm)
#uses the predictors for which there is evidence of association with the outcome
lm2.fit = lm(Sales~Price + US, data = Carseats)
summary(lm2.fit)
# Confidence Intervals
print("Confidence Intervals:")
confint(lm2.fit)
# start plotting
plot(lm.fit)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
#Auto=read.table("Auto.data", header =T,na.strings ="?")
pairs(Auto) # scatterplot matrix
cor(Auto[,1:8]) # correlations between the variables without names
lm.fit =lm(mpg~.-name,data=Auto)
attach(Auto) # for plot
lm.fit =lm(mpg~.-name)
summary(lm.fit)
# start plotting
plot(lm.fit)
plot(log(Auto$horsepower), Auto$mpg)
plot(sqrt(Auto$horsepower), Auto$mpg)
plot((Auto$horsepower)^2, Auto$mpg)
set.seed(1)
x = rnorm(100, 0, 1)
x
set.seed(1)
x = rnorm(100, 0, 1)
eps = rnorm(100, 0, 0.25)
y = -1 + 0.5*x + eps
length(y)
summary(y)
# start plotting
plot(x,y)
lm.fit = lm(y~x)
summary(lm.fit)
abline(lm.fit)
lm2.fit = lm(y~poly(x, 2))
summary(lm2.fit)
plot(x,y)
setwd("~/Documents/Machine-Learning-ISLR")
source('~/Documents/Machine-Learning-ISLR/Q8.R', echo=TRUE)
predict(lm1, data.frame(horsepower=c(98)))
predict(lm.fit, data.frame(horsepower=c(98)))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
lm.fit =lm(mpg~horsepower)
summary(lm.fit)
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
summary(lm.fit)
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
LoadLibraries = function (){
library(ISLR)
library(MASS)
print("The libraries have been loaded .")
}
LoadLibraries()
lm.fit =lm(mpg~horsepower ,data=Auto) # v1: mpg v4: horsepower
attach(Auto) # for plot
summary(lm.fit)
plot(horsepower, mpg)
abline(lm.fit)
abline (lm.fit ,lwd =3, col ="red")
plot(lm.fit)
